<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-jms="http://www.springframework.org/schema/integration/jms"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
       http://www.springframework.org/schema/integration/jms http://www.springframework.org/schema/integration/jms/spring-integration-jms.xsd">

    <int:gateway id="echoGateway"
                 service-interface="com.innovez.learn.second.xml.ComplexEchoGateway">
        <int:method name="echo" request-channel="requestChannel" />
    </int:gateway>
    <int:channel id="requestChannel" />
    <int:splitter id="requestSplitter"
                  input-channel="requestChannel"
                  output-channel="toJmsOutboundGateway"
                  expression="payload.split('\s')"
                  apply-sequence="true">
    </int:splitter>
    <int:channel id="toJmsOutboundGateway"/>
    <int-jms:outbound-gateway id="jmsOutboundGateway"
                              connection-factory="jmsConnectionFactory"
                              request-channel="toJmsOutboundGateway"
                              request-destination-name="integrationQueue"
                              requires-reply="true" reply-channel="sequenceChannel">
    </int-jms:outbound-gateway>
    <int:channel id="sequenceChannel" />
    <int:resequencer id="messageResequencer"
                     input-channel="sequenceChannel"
                     output-channel="aggregateChannel"
                     release-partial-sequences="false">
    </int:resequencer>
    <int:channel id="aggregateChannel" />

    <int:aggregator id="messageAggregator"
                    input-channel="aggregateChannel"
                    expression="T(com.google.common.base.Joiner).on(' ').join(![payload])">
    </int:aggregator>
</beans>